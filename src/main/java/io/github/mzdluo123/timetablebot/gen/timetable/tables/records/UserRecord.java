/*
 * This file is generated by jOOQ.
 */
package io.github.mzdluo123.timetablebot.gen.timetable.tables.records;


import io.github.mzdluo123.timetablebot.gen.timetable.tables.User;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record8<Integer, Long, String, Integer, LocalDateTime, LocalDateTime, Byte, Long> {

    private static final long serialVersionUID = -1956755764;

    /**
     * Setter for <code>timetable.user.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>timetable.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>timetable.user.account</code>.
     */
    public void setAccount(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>timetable.user.account</code>.
     */
    public Long getAccount() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>timetable.user.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>timetable.user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>timetable.user.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>timetable.user.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>timetable.user.last_active</code>.
     */
    public void setLastActive(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>timetable.user.last_active</code>.
     */
    public LocalDateTime getLastActive() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>timetable.user.join_time</code>.
     */
    public void setJoinTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>timetable.user.join_time</code>.
     */
    public LocalDateTime getJoinTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>timetable.user.enable</code>.
     */
    public void setEnable(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>timetable.user.enable</code>.
     */
    public Byte getEnable() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>timetable.user.bot</code>.
     */
    public void setBot(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>timetable.user.bot</code>.
     */
    public Long getBot() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Long, String, Integer, LocalDateTime, LocalDateTime, Byte, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Long, String, Integer, LocalDateTime, LocalDateTime, Byte, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<Long> field2() {
        return User.USER.ACCOUNT;
    }

    @Override
    public Field<String> field3() {
        return User.USER.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return User.USER.STUDENT_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return User.USER.LAST_ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return User.USER.JOIN_TIME;
    }

    @Override
    public Field<Byte> field7() {
        return User.USER.ENABLE;
    }

    @Override
    public Field<Long> field8() {
        return User.USER.BOT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAccount();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getStudentId();
    }

    @Override
    public LocalDateTime component5() {
        return getLastActive();
    }

    @Override
    public LocalDateTime component6() {
        return getJoinTime();
    }

    @Override
    public Byte component7() {
        return getEnable();
    }

    @Override
    public Long component8() {
        return getBot();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAccount();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getStudentId();
    }

    @Override
    public LocalDateTime value5() {
        return getLastActive();
    }

    @Override
    public LocalDateTime value6() {
        return getJoinTime();
    }

    @Override
    public Byte value7() {
        return getEnable();
    }

    @Override
    public Long value8() {
        return getBot();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(Long value) {
        setAccount(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value4(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public UserRecord value5(LocalDateTime value) {
        setLastActive(value);
        return this;
    }

    @Override
    public UserRecord value6(LocalDateTime value) {
        setJoinTime(value);
        return this;
    }

    @Override
    public UserRecord value7(Byte value) {
        setEnable(value);
        return this;
    }

    @Override
    public UserRecord value8(Long value) {
        setBot(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, Long value2, String value3, Integer value4, LocalDateTime value5, LocalDateTime value6, Byte value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, Long account, String name, Integer studentId, LocalDateTime lastActive, LocalDateTime joinTime, Byte enable, Long bot) {
        super(User.USER);

        set(0, id);
        set(1, account);
        set(2, name);
        set(3, studentId);
        set(4, lastActive);
        set(5, joinTime);
        set(6, enable);
        set(7, bot);
    }
}
