/*
 * This file is generated by jOOQ.
 */
package io.github.mzdluo123.timetablebot.gen.timetable.tables.records;


import io.github.mzdluo123.timetablebot.gen.timetable.tables.Course;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseRecord extends UpdatableRecordImpl<CourseRecord> implements Record6<Integer, String, String, String, Double, Double> {

    private static final long serialVersionUID = -1205093125;

    /**
     * Setter for <code>timetable.course.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>timetable.course.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>timetable.course.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>timetable.course.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>timetable.course.thacher</code>.
     */
    public void setThacher(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>timetable.course.thacher</code>.
     */
    public String getThacher() {
        return (String) get(2);
    }

    /**
     * Setter for <code>timetable.course.course_id</code>.
     */
    public void setCourseId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>timetable.course.course_id</code>.
     */
    public String getCourseId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>timetable.course.points</code>.
     */
    public void setPoints(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>timetable.course.points</code>.
     */
    public Double getPoints() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>timetable.course.score</code>.
     */
    public void setScore(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>timetable.course.score</code>.
     */
    public Double getScore() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, Double, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, Double, Double> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Course.COURSE.ID;
    }

    @Override
    public Field<String> field2() {
        return Course.COURSE.NAME;
    }

    @Override
    public Field<String> field3() {
        return Course.COURSE.THACHER;
    }

    @Override
    public Field<String> field4() {
        return Course.COURSE.COURSE_ID;
    }

    @Override
    public Field<Double> field5() {
        return Course.COURSE.POINTS;
    }

    @Override
    public Field<Double> field6() {
        return Course.COURSE.SCORE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getThacher();
    }

    @Override
    public String component4() {
        return getCourseId();
    }

    @Override
    public Double component5() {
        return getPoints();
    }

    @Override
    public Double component6() {
        return getScore();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getThacher();
    }

    @Override
    public String value4() {
        return getCourseId();
    }

    @Override
    public Double value5() {
        return getPoints();
    }

    @Override
    public Double value6() {
        return getScore();
    }

    @Override
    public CourseRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CourseRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CourseRecord value3(String value) {
        setThacher(value);
        return this;
    }

    @Override
    public CourseRecord value4(String value) {
        setCourseId(value);
        return this;
    }

    @Override
    public CourseRecord value5(Double value) {
        setPoints(value);
        return this;
    }

    @Override
    public CourseRecord value6(Double value) {
        setScore(value);
        return this;
    }

    @Override
    public CourseRecord values(Integer value1, String value2, String value3, String value4, Double value5, Double value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseRecord
     */
    public CourseRecord() {
        super(Course.COURSE);
    }

    /**
     * Create a detached, initialised CourseRecord
     */
    public CourseRecord(Integer id, String name, String thacher, String courseId, Double points, Double score) {
        super(Course.COURSE);

        set(0, id);
        set(1, name);
        set(2, thacher);
        set(3, courseId);
        set(4, points);
        set(5, score);
    }
}
