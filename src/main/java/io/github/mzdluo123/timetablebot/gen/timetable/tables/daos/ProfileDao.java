/*
 * This file is generated by jOOQ.
 */
package io.github.mzdluo123.timetablebot.gen.timetable.tables.daos;


import io.github.mzdluo123.timetablebot.gen.timetable.tables.Profile;
import io.github.mzdluo123.timetablebot.gen.timetable.tables.records.ProfileRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileDao extends DAOImpl<ProfileRecord, io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile, Integer> {

    /**
     * Create a new ProfileDao without any configuration
     */
    public ProfileDao() {
        super(Profile.PROFILE, io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile.class);
    }

    /**
     * Create a new ProfileDao with an attached configuration
     */
    public ProfileDao(Configuration configuration) {
        super(Profile.PROFILE, io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile.class, configuration);
    }

    @Override
    public Integer getId(io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Profile.PROFILE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile> fetchById(Integer... values) {
        return fetch(Profile.PROFILE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile fetchOneById(Integer value) {
        return fetchOne(Profile.PROFILE.ID, value);
    }

    /**
     * Fetch records that have <code>user BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile> fetchRangeOfUser(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Profile.PROFILE.USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user IN (values)</code>
     */
    public List<io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile> fetchByUser(Integer... values) {
        return fetch(Profile.PROFILE.USER, values);
    }

    /**
     * Fetch records that have <code>extra BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile> fetchRangeOfExtra(String lowerInclusive, String upperInclusive) {
        return fetchRange(Profile.PROFILE.EXTRA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extra IN (values)</code>
     */
    public List<io.github.mzdluo123.timetablebot.gen.timetable.tables.pojos.Profile> fetchByExtra(String... values) {
        return fetch(Profile.PROFILE.EXTRA, values);
    }
}
