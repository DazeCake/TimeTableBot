/*
 * This file is generated by jOOQ.
 */
package io.github.mzdluo123.timetablebot.gen.information_schema.tables.records;


import io.github.mzdluo123.timetablebot.gen.information_schema.tables.InnodbSysTables;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbSysTablesRecord extends TableRecordImpl<InnodbSysTablesRecord> implements Record8<ULong, String, Integer, Integer, Integer, String, UInteger, String> {

    private static final long serialVersionUID = 1109890408;

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.TABLE_ID</code>.
     */
    public void setTableId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.TABLE_ID</code>.
     */
    public ULong getTableId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.FLAG</code>.
     */
    public void setFlag(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.FLAG</code>.
     */
    public Integer getFlag() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.N_COLS</code>.
     */
    public void setNCols(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.N_COLS</code>.
     */
    public Integer getNCols() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.SPACE</code>.
     */
    public void setSpace(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.SPACE</code>.
     */
    public Integer getSpace() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.ROW_FORMAT</code>.
     */
    public void setRowFormat(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.ROW_FORMAT</code>.
     */
    public String getRowFormat() {
        return (String) get(5);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.ZIP_PAGE_SIZE</code>.
     */
    public void setZipPageSize(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.ZIP_PAGE_SIZE</code>.
     */
    public UInteger getZipPageSize() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_TABLES.SPACE_TYPE</code>.
     */
    public void setSpaceType(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_TABLES.SPACE_TYPE</code>.
     */
    public String getSpaceType() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, Integer, Integer, Integer, String, UInteger, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, String, Integer, Integer, Integer, String, UInteger, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return InnodbSysTables.INNODB_SYS_TABLES.TABLE_ID;
    }

    @Override
    public Field<String> field2() {
        return InnodbSysTables.INNODB_SYS_TABLES.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return InnodbSysTables.INNODB_SYS_TABLES.FLAG;
    }

    @Override
    public Field<Integer> field4() {
        return InnodbSysTables.INNODB_SYS_TABLES.N_COLS;
    }

    @Override
    public Field<Integer> field5() {
        return InnodbSysTables.INNODB_SYS_TABLES.SPACE;
    }

    @Override
    public Field<String> field6() {
        return InnodbSysTables.INNODB_SYS_TABLES.ROW_FORMAT;
    }

    @Override
    public Field<UInteger> field7() {
        return InnodbSysTables.INNODB_SYS_TABLES.ZIP_PAGE_SIZE;
    }

    @Override
    public Field<String> field8() {
        return InnodbSysTables.INNODB_SYS_TABLES.SPACE_TYPE;
    }

    @Override
    public ULong component1() {
        return getTableId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getFlag();
    }

    @Override
    public Integer component4() {
        return getNCols();
    }

    @Override
    public Integer component5() {
        return getSpace();
    }

    @Override
    public String component6() {
        return getRowFormat();
    }

    @Override
    public UInteger component7() {
        return getZipPageSize();
    }

    @Override
    public String component8() {
        return getSpaceType();
    }

    @Override
    public ULong value1() {
        return getTableId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getFlag();
    }

    @Override
    public Integer value4() {
        return getNCols();
    }

    @Override
    public Integer value5() {
        return getSpace();
    }

    @Override
    public String value6() {
        return getRowFormat();
    }

    @Override
    public UInteger value7() {
        return getZipPageSize();
    }

    @Override
    public String value8() {
        return getSpaceType();
    }

    @Override
    public InnodbSysTablesRecord value1(ULong value) {
        setTableId(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value3(Integer value) {
        setFlag(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value4(Integer value) {
        setNCols(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value5(Integer value) {
        setSpace(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value6(String value) {
        setRowFormat(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value7(UInteger value) {
        setZipPageSize(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord value8(String value) {
        setSpaceType(value);
        return this;
    }

    @Override
    public InnodbSysTablesRecord values(ULong value1, String value2, Integer value3, Integer value4, Integer value5, String value6, UInteger value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbSysTablesRecord
     */
    public InnodbSysTablesRecord() {
        super(InnodbSysTables.INNODB_SYS_TABLES);
    }

    /**
     * Create a detached, initialised InnodbSysTablesRecord
     */
    public InnodbSysTablesRecord(ULong tableId, String name, Integer flag, Integer nCols, Integer space, String rowFormat, UInteger zipPageSize, String spaceType) {
        super(InnodbSysTables.INNODB_SYS_TABLES);

        set(0, tableId);
        set(1, name);
        set(2, flag);
        set(3, nCols);
        set(4, space);
        set(5, rowFormat);
        set(6, zipPageSize);
        set(7, spaceType);
    }
}
